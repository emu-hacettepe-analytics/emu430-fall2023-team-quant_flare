[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Team Quant Flare",
    "section": "",
    "text": "This is our project webpage.\nPlease stay tuned to follow our project activities.\n\nTeam Members\n\nAyberk Gönülrazı\nAyşıl Mutlu\nUlaş Sarp Koçak\nZeynep Ayşe Özçelik\n\n\n\nProject Topic\nThe data set we consider in this study includes the population growth rate in Turkey and the number of foreign babies by year.\nThe main sources of the data set include the Turkish Statistical Institute (TURKSTAT) and other official demographic data. data providers. These sources conduct extensive field surveys and censuses to provide reliable and up-to-date information. In this way, we ensure the reliability and accuracy of the basic data on which our study is based.\nWe chose this data set because we aim to better understand the changes in Turkey’s population structure and the reasons for these changes. Population growth rate and foreign baby numbers are important indicators for assessing a country’s demographic development and predicting future demographic trends. Analyzes to be made on this data set will help us understand the age distribution of the population, migration movements and relationships with socioeconomic factors.\nThe main goal of this study is to understand the changes in Turkey’s population structure in depth, to determine the potential impacts of these changes on society and to predict future demographic trends.[1]\n\n\nData Set\nWe received the data we will discuss in this project from TÜİK. You can access the resources from here and here.\n\n\nTeaser\nYou can reach from link\n[1]We got help from QuillBot’s Paraphraser and Grammar Checker tools to use more effective phrases in the texts we prepared.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "First of all, we generated the data that would be useful to us from TURKSTAT’s website. After downloading the data as an Excel file, we changed the positions of the columns and raws, making it easier to work on it. Next, we anchored the rows and columns of the data so that R could read them. Finally, we created column headings for the cities.\n\nLoading necessary libraries :\n\nShow the code\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(ggrepel)\nlibrary(reshape2)\nlibrary(gridExtra)\n\nLoad the data:\n\nShow the code\nlibrary(readxl)\nurl &lt;- \"https://github.com/emu-hacettepe-analytics/emu430-fall2023-team-quant_flare/raw/master/Foreign_child_by_year.xlsx\"\ntemp_file &lt;- tempfile(fileext = \".xlsx\")\ndownload.file(url, temp_file, mode = \"wb\")\ndataset &lt;- read_excel(temp_file)\n\nhead(dataset)\n\n\nA tibble: 6 × 10\nCity 2014 2015 2016 2017 2018 2019 2020 2021 2022           1 Adana 2416 2148 1810 2031 3211 3899 3951 4151 4195 2 Adıyaman 57 69 142 303 520 554 474 505 564 3 Afyonkarahisar 1027 1342 2005 2063 3036 3625 3741 4025 3736 4 Ağrı 198 136 163 118 149 146 111 188 219 5 Aksaray 1482 1865 2780 3291 4605 4839 5088 5664 5740 6 Amasya 347 704 1022 1005 1659 1660 1575 1462 1313\n\nShow the code\nstr(dataset)\n\ntibble [81 × 10] (S3: tbl_df/tbl/data.frame) $ City: chr [1:81] “Adana” “Adıyaman” “Afyonkarahisar” “Ağrı” … $ 2014: num [1:81] 2416 57 1027 198 1482 … $ 2015: num [1:81] 2148 69 1342 136 1865 … $ 2016: num [1:81] 1810 142 2005 163 2780 … $ 2017: num [1:81] 2031 303 2063 118 3291 … $ 2018: num [1:81] 3211 520 3036 149 4605 … $ 2019: num [1:81] 3899 554 3625 146 4839 … $ 2020: num [1:81] 3951 474 3741 111 5088 … $ 2021: num [1:81] 4151 505 4025 188 5664 … $ 2022: num [1:81] 4195 564 3736 219 5740 …\n\nShow the code\nsummary(dataset)\n\n City                2014            2015            2016      \nLength:81 Min. : 5 Min. : 4 Min. : 4\nClass :character 1st Qu.: 192 1st Qu.: 213 1st Qu.: 240\nMode :character Median : 447 Median : 603 Median : 941\nMean : 1048 Mean : 1419 Mean : 1914\n3rd Qu.: 939 3rd Qu.: 1364 3rd Qu.: 1663\nMax. :19700 Max. :26700 Max. :33938\n2017 2018 2019 2020\nMin. : 5 Min. : 5 Min. : 6 Min. : 8\n1st Qu.: 178 1st Qu.: 264 1st Qu.: 381 1st Qu.: 376\nMedian : 1088 Median : 1303 Median : 1354 Median : 1224\nMean : 2309 Mean : 3425 Mean : 4082 Mean : 3570\n3rd Qu.: 2076 3rd Qu.: 2932 3rd Qu.: 3401 3rd Qu.: 2991\nMax. :46736 Max. :71830 Max. :92286 Max. :66703\n2021 2022\nMin. : 11 Min. : 11\n1st Qu.: 505 1st Qu.: 449\nMedian : 1272 Median : 1313\nMean : 4506 Mean : 4561\n3rd Qu.: 3276 3rd Qu.: 3029\nMax. :113605 Max. :118735\n\n\nEDA ANALYSE\n\nShow the code\nhead(dataset)\n\n\n\nA tibble: 6 × 10\nCity 2014 2015 2016 2017 2018 2019 2020 2021 2022           1 Adana 2416 2148 1810 2031 3211 3899 3951 4151 4195 2 Adıyaman 57 69 142 303 520 554 474 505 564 3 Afyonkarahisar 1027 1342 2005 2063 3036 3625 3741 4025 3736 4 Ağrı 198 136 163 118 149 146 111 188 219 5 Aksaray 1482 1865 2780 3291 4605 4839 5088 5664 5740 6 Amasya 347 704 1022 1005 1659 1660 1575 1462 1313\n\nShow the code\nstr(dataset)\n\ntibble [81 × 10] (S3: tbl_df/tbl/data.frame) $ City: chr [1:81] “Adana” “Adıyaman” “Afyonkarahisar” “Ağrı” … $ 2014: num [1:81] 2416 57 1027 198 1482 … $ 2015: num [1:81] 2148 69 1342 136 1865 … $ 2016: num [1:81] 1810 142 2005 163 2780 … $ 2017: num [1:81] 2031 303 2063 118 3291 … $ 2018: num [1:81] 3211 520 3036 149 4605 … $ 2019: num [1:81] 3899 554 3625 146 4839 … $ 2020: num [1:81] 3951 474 3741 111 5088 … $ 2021: num [1:81] 4151 505 4025 188 5664 … $ 2022: num [1:81] 4195 564 3736 219 5740 …\n\nShow the code\nsummary(dataset)\n\n City                2014            2015            2016      \nLength:81 Min. : 5 Min. : 4 Min. : 4\nClass :character 1st Qu.: 192 1st Qu.: 213 1st Qu.: 240\nMode :character Median : 447 Median : 603 Median : 941\nMean : 1048 Mean : 1419 Mean : 1914\n3rd Qu.: 939 3rd Qu.: 1364 3rd Qu.: 1663\nMax. :19700 Max. :26700 Max. :33938\n2017 2018 2019 2020\nMin. : 5 Min. : 5 Min. : 6 Min. : 8\n1st Qu.: 178 1st Qu.: 264 1st Qu.: 381 1st Qu.: 376\nMedian : 1088 Median : 1303 Median : 1354 Median : 1224\nMean : 2309 Mean : 3425 Mean : 4082 Mean : 3570\n3rd Qu.: 2076 3rd Qu.: 2932 3rd Qu.: 3401 3rd Qu.: 2991\nMax. :46736 Max. :71830 Max. :92286 Max. :66703\n2021 2022\nMin. : 11 Min. : 11\n1st Qu.: 505 1st Qu.: 449\nMedian : 1272 Median : 1313\nMean : 4506 Mean : 4561\n3rd Qu.: 3276 3rd Qu.: 3029\nMax. :113605 Max. :118735\n\nShow the code\n# Veri çerçevesini oluştur\nmean_values &lt;- dataset %&gt;%\n  gather(key = \"Year\", value = \"Value\", -City) %&gt;%\n  group_by(Year) %&gt;%\n  summarize(mean_value = mean(Value, na.rm = TRUE))\n\n# Veri çerçevesini kontrol et\nprint(mean_values)\n\n\n\nA tibble: 9 × 2\nYear mean_value   1 2014 1048. 2 2015 1419. 3 2016 1914. 4 2017 2309. 5 2018 3425. 6 2019 4082. 7 2020 3570. 8 2021 4506. 9 2022 4561.\n\nShow the code\n# Drawing a boxplot of values by city\ndataset_long &lt;- melt(dataset, id.vars = \"City\")\nggplot(dataset_long, aes(x = variable, y = value)) +\n  geom_boxplot() +\n  labs(title = \"Value Distribution of Cities\",\n       x = \"Year\",\n       y = \"Value\") +\n  theme_minimal()\n\n\n\nShow the code\n# Showing ranked values of cities for 2022\ndataset_2022 &lt;- dataset %&gt;%\n  select(City, `2022`) %&gt;%\n  arrange(desc(`2022`))\n\nggplot(dataset_2022, aes(x = reorder(City, `2022`), y = `2022`)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Ranked Values of Cities by 2022\",\n       x = \"City\",\n       y = \"Value\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\nShow the code\n# Bring related charts together\ngrid.arrange(ggplot(dataset_long, aes(x = variable, y = value)) +\n               geom_boxplot() +\n               labs(title = \"Value Distributions of Cities\",\n                    x = \"Year\",\n                    y = \"Value\") +\n               theme_minimal(),\n             ggplot(dataset_2022, aes(x = reorder(City, `2022`), y = `2022`)) +\n               geom_bar(stat = \"identity\") +\n               labs(title = \"Ranked Values of Cities by 2022\",\n                    x = \"City\",\n                    y = \"Value\") +\n               theme_minimal() +\n               theme(axis.text.x = element_text(angle = 45, hjust = 1)),\n             ncol = 1)\n\n\nVisualization to see trends We visualized the data set as a line graph. In this way , data visualization of all cities was achieved at once.\n\nShow the code\n# We converted the data to long format for ggplot2\nlibrary(tidyr)\nforeign_child_long &lt;- gather(dataset, key = \"Year\", value = \"Value\", -City)\n\n# Code for Printing the structure and head of the data frame for inspection\nstr(foreign_child_long)\n\ntibble [729 × 3] (S3: tbl_df/tbl/data.frame) $ City : chr [1:729] “Adana” “Adıyaman” “Afyonkarahisar” “Ağrı” … $ Year : chr [1:729] “2014” “2014” “2014” “2014” … $ Value: num [1:729] 2416 57 1027 198 1482 …\n\nShow the code\nhead(foreign_child_long)\n\n\n\nA tibble: 6 × 3\nCity Year Value    1 Adana 2014 2416 2 Adıyaman 2014 57 3 Afyonkarahisar 2014 1027 4 Ağrı 2014 198 5 Aksaray 2014 1482 6 Amasya 2014 347\n\nShow the code\n# Converting the 'Year' column to a factor for correct ordering\nforeign_child_long$Year &lt;- factor(foreign_child_long$Year, levels = c(\"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\"))\n\n# Checking the levels of the 'Year' factor\nlevels(foreign_child_long$Year)\n\n[1] “2014” “2015” “2016” “2017” “2018” “2019” “2020” “2021” “2022”\n\nShow the code\n# Creating a line plot\nlibrary(ggplot2)\nggplot(foreign_child_long, aes(x = Year, y = Value, group = City, color = City)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Foreign Child Population Over the Years\",\n       x = \"Year\",\n       y = \"Population\") +\n  theme_minimal()\n\n\nAs we expected, the number in densely populated cities such as Istanbul and Ankara was much higher than other cities. But what was surprising was the density in Antalya. Antalya, which is not among the top 5 provinces of Turkey in terms of population density, had a higher density than expected. Having all 81 cities on a single line chart did not provide a very efficient analysis facility. We added the columns of the data set and plotted the total number between 2014 and 2022 on a line chart. In this way, a trend that is the average of all cities can be observed.\n\n# We converted the data to long format for ggplot2\nlibrary(tidyr)\nforeign_child_long &lt;- gather(dataset, key = \"Year\", value = \"Value\", -City)\n\n# Code for Printing the structure and head of the data frame for inspection\nstr(foreign_child_long)\n\ntibble [729 × 3] (S3: tbl_df/tbl/data.frame)\n $ City : chr [1:729] \"Adana\" \"Adıyaman\" \"Afyonkarahisar\" \"Ağrı\" ...\n $ Year : chr [1:729] \"2014\" \"2014\" \"2014\" \"2014\" ...\n $ Value: num [1:729] 2416 57 1027 198 1482 ...\n\nhead(foreign_child_long)\n\n# A tibble: 6 × 3\n  City           Year  Value\n  &lt;chr&gt;          &lt;chr&gt; &lt;dbl&gt;\n1 Adana          2014   2416\n2 Adıyaman       2014     57\n3 Afyonkarahisar 2014   1027\n4 Ağrı           2014    198\n5 Aksaray        2014   1482\n6 Amasya         2014    347\n\n# Converting the 'Year' column to a factor for correct ordering\nforeign_child_long$Year &lt;- factor(foreign_child_long$Year, levels = c(\"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\"))\n\ntotal_foreign_child &lt;- foreign_child_long %&gt;%\n  group_by(Year) %&gt;%\n  summarise(Total_Value = sum(Value, na.rm = TRUE))\n\n# Creating a line plot for the total values\nggplot(total_foreign_child, aes(x = Year, y = Total_Value)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Total Foreign Child Population Over the Years\",\n       x = \"Year\",\n       y = \"Total Population\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::comma_format(scale = 1e-3, suffix = \"K\"))\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\nIn the light of the graph , it can be easily seen that there is an increasing trend in the number of foreign babies born in the last 10 years.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "Data source:\nhttps://biruni.tuik.gov.tr/medas/?kn=206&locale=en\n\nWhat is the information about, and where did it come from?\nThe “foreign child by year” data set, which we examined, displays the breakdown of foreign children in Turkey’s 81 provinces from 2014 to 2022. We obtained this information from the Turkish Statistical Institute’s (TUIK) database.\n\n\nWhy did we choose this data?\nWe intended to carry out a study to look at the severity of the immigration issue in our nation over time, which began in Turkey approximately ten years ago. We looked at the distribution of the growing number of foreign children in Turkey by years and provinces. Since immigrants have been arriving from various nations (Syria, Afghanistan, Pakistan, etc.) and raising children there, we also looked at how these provinces’ demographic structures will likely deteriorate over the next few years. Our goal is to examine this data set and forecast the balance that will develop between Turkish and international students in the upcoming years, as well as the implications and effects on the educational environment in schools.\n\n\nHow did we import the data?\nFirst, we obtained the data to be used for analysis from TURKSTAT’s website. To import this data, we read the Excel file using the readxl library. We downloaded the data and stored it in a temporary file, using the download.file function to pull the data from GitHub and the tempfile function to create a temporary file. Next, we loaded the Excel data into the R environment using the read_excel function and represented it with a variable called dataset.\nBefore examining the data, we discussed potential preprocessing steps. For example, we implemented a preprocessing step using the na.omit function to check for missing values ​​and clean them if necessary. We thought that cleaning missing values ​​would contribute to making the data more consistent and reliable. However, we also added other preprocessing steps depending on the characteristics of the dataset. For example, editing the data, removing unnecessary columns, etc.\nFinally, we examined the data using the head, str, and summary functions. While the first few rows were displayed with head, the str function explained the structure of the data set in detail. The summary function provided the basic statistical summary of each variable.\nEach of these steps were important for the data set to be analyzed accurately and reliably.\n\n\n\n\n Back to top"
  }
]